(bind merge-non-empty (func (lhs rhs result)
	(do
		(bind l (car lhs))
		(bind r (car rhs))
		(if (< l r)
			(merge-general (cdr lhs) rhs (cat result [l]))
			(merge-general lhs (cdr rhs) (cat result [r]))
		)
	)
))

(bind merge-general (func (lhs rhs result)
	(do
		(bind left-empty (empty lhs))	
		(bind right-empty (empty rhs))
		(if (&& left-empty right-empty)
			result
			(if left-empty
				(cat result rhs)
				(if right-empty
					(cat result lhs)
					(merge-non-empty lhs rhs result)
				)
			)
		)
	)
))

(bind merge (func (lhs rhs)
	(merge-general lhs rhs [])
))

(bind merge-sort (func (x)
    (do
        (bind len (length x))
        (bind half-len (/ len 2))
        (if (<= len 1)
            x
            (merge
                (merge-sort (slice x 0 half-len))
                (merge-sort (slice x half-len len))
            )
        )
    )
))
